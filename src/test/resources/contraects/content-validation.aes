@compiler >= 6
 
include "Option.aes"
include "String.aes"
 
payable contract ContentValidation =
 
  record state =
    { content_version_hash_list: map(int, map(int, hash)) } // content_id, version, content_version_hash
 
  /**
    init method
   */
  stateful entrypoint init() =   
    {  content_version_hash_list = {} }
    
  stateful entrypoint add_content_version(content_id: int, version: int, content: string) =
          switch(Map.lookup(content_id, state.content_version_hash_list))            
            None =>
              put(state{content_version_hash_list = state.content_version_hash_list{[content_id]={[version]=String.sha256(content)}}})
            Some(cnt) =>
              put(state{content_version_hash_list = state.content_version_hash_list{[content_id]=state.content_version_hash_list[content_id]{[version]=String.sha256(content)}}})
  
  stateful entrypoint delete_content_version(content_id: int, version: int) =
  	switch(Map.lookup(content_id, state.content_version_hash_list))            
            None =>
              ()
            Some(cnt) =>
              if(Map.size(cnt) > 1)
                put(state{content_version_hash_list = state.content_version_hash_list{[content_id]=state.content_version_hash_list[content_id]{[version]=String.sha256("0")}}})
              else
                put(state{content_version_hash_list = state.content_version_hash_list{[content_id]={}}})
                
  stateful entrypoint delete_content(content_id: int) =
  	switch(Map.lookup(content_id, state.content_version_hash_list))            
            None =>
              ()
            Some(cnt) =>
                put(state{content_version_hash_list = state.content_version_hash_list{[content_id]={}}})
  
  entrypoint validate_content_version(content_id: int, version: int, content: string) : bool =
    require(Map.member(content_id, state.content_version_hash_list), "ERROR_CONTENT_ID_NOT_FOUND")
    require(Map.member(version, state.content_version_hash_list[content_id]), "ERROR_VERSION_NOT_FOUND")
    require(String.length(content) > 0,"ERROR_CONTENT_EMPTY")
    if(String.sha256(content) == state.content_version_hash_list[content_id][version])
      true
    else
      false